---
apiVersion: v1
kind: ServiceAccount 
metadata:
  name: grafana-agent
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-agent-image-pull
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJkb2NZXItZW50ZXJwcm1zZS1kZXYtbG9jYWwuYXJOaWZhY3RyZXBvc210b3J5LmNpdG1ncm91cC5uZXQiOnsidXN1cm5hbWUiOiJhZHN1bnN1bG9va3VwIiwicGFzc3dvcmQ¡0¡JBSONwNWVrVDI1OUhDYmd3UGVEeHJMZGpVdExubWlORIV1Z29LWGtwam0zNjhmV25mZTdWQj1EV3Fma25xTGF0QOR5RW1uV1NwIiwiYXV0aCI6IllXUnpaVzV6ZFd4dmIydDFjRHBCUzB0d05XVnJWREkxT1VoRF1tZDNVR1ZFZUhKTVpHcFzkRXh1YldsMFJsVjFaMj1MV0d0d2FtMHpOamhtVjIlbVpUZFdRamxFVjNGbWEyNXhUR0ZvUTBSNVJXMXVWMU53IiwiZW1
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
data:
  grafana-agent.river: |

    otelcol.exporter.otlp "elastic" {
      client {
        endpoint = "elasticsearch:9200"
        auth = otelcol.auth.basic.credentials.handler
      }
    }  

    otelcol.auth.basic "elastic" {
      username = env("BASIC_AUTH_USER")
      password = env("API_KEY")
    }

    otelcol.receiver.otlp "otel" {
      grpc {
        endpoint = "0.0.0.0:4317"
      }

      http {
        endpoint = "0.0.0.0:4318"
      }

      output {
        metrics = [otelcol.exporter.otlp.elastic.input]
        logs    = [otelcol.exporter.otlp.elastic.input]
        traces  = [otelcol.exporter.otlp.elastic.input]
      }  
    }
    
    logging {
      level = "debug"
    }    
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana-agent
  serviceName: grafana-agent
  template:
    metadata:
      labels:
        name: grafana-agent
    spec:
      imagePullSecrets:
        - name: grafana-agent-image-pull
      initContainers:
        - name: init-permissions
          image: >-
            docker-enterprise-prod.artifactrepository.citigroup.net/citi-soe-rhel/rhelsubi:latest
          command: ["/bin/sh", "-c", "mkdir -p /var/lib/agent/lost+found/wal && chmod -R 0775 /var/lib/agent/lost+found/wal"]
          volumeMounts:
            - name: agent-wal
              mountPath: /var/lib/agent
      containers:
      - args:
        - run
        - /etc/agent/grafana-agent.river
        - '--storage.path=/var/lib/agent'
        - '--disable-reporting'
        - '--server.http.listen-addr=$(PODIP):12345'
        command: 
        -  /usr/bin/grafana-agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: AGENT_MODE
          value: flow
        - name: VAULT_CAPATH
          value: '/cacerts/CitiInternalCAChain_UAT.pem'
        - name: PODIP
           valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: docker-enterprise-prod.artifactrepository.citigroup.net/cate-cmt-aim/grafana-agent:v0.40.1_A0
        imagePullPolicy: IfNotPresent
        name: grafana-agent
        ports:
        - containerPort: 12345
          name: ui
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        volumeMounts:
        - mountPath: /var/lib/agent
          name: agent-wal
        - mountPath: /etc/agent
          name: grafana-agent-config
      serviceAccount: grafana-agent
      volumes:
      - configMap:
          name: grafana-agent-config
        name: grafana-agent-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiversion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: agent-wal
    spec:
      accessModes:
      - ReadWriteOnce
      resources: 
        requests:
          storage: 5Gi
      storageClassName: <<other_than_default_sc>>
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
spec:
  ports:
    - name: ui
      protocol: TCP
      port: 12345
      targetPort: 12345
      nodePort: 31234
    - name: otlp-grpc
      protocol: TCP
      port: 4317
      targetPort: 4317
      nodePort: 31235
    - name: otlp-http
      protocol: TCP
      port: 4318
      targetPort: 4318
      nodePort: 31236
  type: NodePort
  selector:
    name: grafana-agent
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: grafana-agent
  labels:
    app: grafana-agent
spec:
  to:
    kind: Service
    name: grafana-agent
  weight: 100
  port:
    targetPort: ui
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: None
    wildcardPolicy: None
